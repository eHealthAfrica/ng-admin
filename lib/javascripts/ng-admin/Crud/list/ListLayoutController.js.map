{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/ListLayoutController.js"],"names":["getCurrentSearchParam","location","filters","search","JSON","parse","map","filter","name","getMappedValue","ListLayoutController","$scope","$stateParams","$state","$location","$timeout","view","dataStore","entity","getEntity","actions","batchActions","loadingPage","path","$watch","newval","oldval","enabledFilters","getEnabledFilters","_","debounce","newValues","oldValues","updateFilters","hasFilters","Object","keys","length","focusedFilterId","enableFilter","bind","removeFilter","selectionUpdater","selection","$on","destroy","defaultValue","push","el","window","document","getElementById","focus","pinned","values","fieldName","field","i","type","getTransformedValue","page","go","f","undefined","$inject"],"mappings":"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","file":"ListLayoutController.js","sourcesContent":["/* globals _ */\nfunction getCurrentSearchParam(location, filters) {\n    let search = location.search().search ? JSON.parse(location.search().search) : {};\n    filters.map(filter => {\n        if (search[filter.name()]) {\n            search[filter.name()] = filter.getMappedValue(search[filter.name()]);\n        }\n    });\n    return search;\n}\n\nexport default class ListLayoutController {\n    constructor($scope, $stateParams, $state, $location, $timeout, view, dataStore) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.view = view;\n        this.dataStore = dataStore;\n        this.entity = view.getEntity();\n        this.actions = view.actions();\n        this.batchActions = view.batchActions();\n        this.loadingPage = false;\n        this.filters = view.filters();\n        this.search = getCurrentSearchParam($location, this.filters);\n        this.path = $location.path();\n        // since search isn't a $stateParam of the listLayout state,\n        // the controller doesn't change when the search changes\n        // so we must update filter values manually when the location changes\n        $scope.$watch(\n            () => $location.search() && $location.search().search,\n            (newval, oldval) => {\n                if (newval === oldval) {\n                    return;\n                }\n                if ($location.path() !== this.path) {\n                    return; // already transitioned to another page\n                }\n                this.search = getCurrentSearchParam($location, this.filters);\n                this.enabledFilters = this.getEnabledFilters();\n            }\n        );\n        // apply filters when filter values change\n        $scope.$watch(\n            () => this.search,\n            _.debounce((newValues, oldValues) => {\n                if (newValues != oldValues) {\n                    this.updateFilters();\n                }\n            }, 500),\n            true\n        );\n        this.filters = view.filters();\n        this.enabledFilters = this.getEnabledFilters();\n        this.hasFilters = Object.keys(this.filters).length > 0;\n        this.focusedFilterId = null;\n        this.enableFilter = this.enableFilter.bind(this);\n        this.removeFilter = this.removeFilter.bind(this);\n        if (this.batchActions.length) {\n            // required in scope to communicate with listView\n            $scope.selectionUpdater = selection => $scope.selection = selection;\n            $scope.selection = [];\n        }\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n    }\n\n    enableFilter(filter) {\n        let defaultValue = filter.defaultValue();\n        if (defaultValue !== null) {\n            this.search[filter.name()] = defaultValue;\n        }\n        this.enabledFilters.push(filter);\n        this.focusedFilterId = filter.name();\n        this.$timeout(() => {\n            let el = window.document.getElementById(this.focusedFilterId);\n            if (el && el.focus) {\n                el.focus();\n            }\n        }, 200, false);\n    }\n\n    getEnabledFilters() {\n        return this.filters.filter(filter => {\n            if (filter.pinned()) {\n                return true;\n            }\n            return this.search && (filter.name() in this.search);\n        });\n    }\n\n    updateFilters() {\n        var values = {},\n            filters = this.enabledFilters,\n            fieldName,\n            field,\n            i;\n        for (i in filters) {\n            field = filters[i];\n            fieldName = field.name();\n            if (this.search[fieldName] === '') {\n                delete this.search[fieldName];\n                continue;\n            }\n\n            if ((field.type() === 'boolean' && fieldName in this.search) || // for boolean false is the same as null\n                (field.type() !== 'boolean' && this.search[fieldName] !== null)) {\n                values[fieldName] = field.getTransformedValue(this.search[fieldName]);\n            }\n        }\n        this.$stateParams.search = values;\n        this.$stateParams.page = 1;\n        this.$state.go('list', this.$stateParams);\n    }\n\n    removeFilter(filter) {\n        delete this.search[filter.name()];\n        this.enabledFilters = this.enabledFilters.filter(f => f !== filter);\n    }\n\n    destroy() {\n        this.$scope = undefined;\n        this.$state = undefined;\n        this.$stateParams = undefined;\n        this.$timeout = undefined;\n        this.dataStore = undefined;\n    }\n}\n\nListLayoutController.$inject = ['$scope', '$stateParams', '$state', '$location', '$timeout', 'view', 'dataStore'];\n"]}